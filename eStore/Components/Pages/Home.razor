@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using eStore.Helpers
@inject IJSRuntime JSRuntime
 @inject AuthenticationStateProvider AuthStateProvider
 @inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    <Authorized>
        <p>Hello, @context.User.Identity.Name</p>
        <a @onclick="Logout" href="#">Logout</a>
    </Authorized>
    <NotAuthorized>
        <p>You're not signed in.</p>
        <p><a href="/login">Log in</a> to view secure data.</p>
    </NotAuthorized>
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

<AuthorizeView>
    <Authorized>
        <button @onclick="DisplayUser"></button>
    </Authorized>
</AuthorizeView>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private async Task DisplayUser()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        var message = $"Hello, {user.Identity.Name}";
        await JSRuntime.InvokeVoidAsync("alert", message);
    }
    private async Task Logout()
    {
        var customState = (CustomAuthStateProvider)AuthStateProvider;
		await customState.UpdateAuthenticationState(null);
		NavigationManager.NavigateTo("/");
    }
}
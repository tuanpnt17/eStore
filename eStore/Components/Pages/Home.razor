@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime JSRuntime
<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
	<Authorized>
		<p>Hello, @context.User.Identity.Name</p>
	</Authorized>
	<NotAuthorized>
		<p>You're not signed in.</p>
		<p><a href="authentication/login">Log in</a> to view secure data.</p>
	</NotAuthorized>
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

<AuthorizeView>
	<Authorized>
		<button @onclick="DisplayUser"></button>
	</Authorized>
</AuthorizeView>

@code
{
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }
	private async Task DisplayUser()
	{
		var authState = await authenticationStateTask;
		var user = authState.User;
		var message = $"Hello, {user.Identity.Name}";
		await JSRuntime.InvokeVoidAsync("alert", message);
	}
}